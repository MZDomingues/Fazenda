unit uProfessor;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uPadrao, Data.DB, Vcl.Grids,
  Vcl.DBGrids, Vcl.Buttons, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.ComCtrls, FireDAC.Comp.Client,
  clsProfessor, clsNota, dmEscola;

type
  Tfrm_Professor = class(TFrm_Padrao)
    lbl_Id: TLabel;
    edt_Id: TEdit;
    lbl_Nome: TLabel;
    edt_Nome: TEdit;
    lbl_Cpf: TLabel;
    edt_Cpf: TEdit;
    lbl_Sexo: TLabel;
    cb_Sexo: TComboBox;
    lbl_Dt_Nascimento: TLabel;
    dtp_Dt_Nascimento: TDateTimePicker;
    lbl_Email: TLabel;
    edt_Email: TEdit;
    lbl_Disciplina: TLabel;
    edt_Disciplina: TEdit;
    btn_Notas: TBitBtn;
    btn_Media: TBitBtn;
    ds_Media: TDataSource;
    mm_Media: TMemo;
    procedure btn_SalvarClick(Sender: TObject);
    procedure btn_CancelarClick(Sender: TObject);
    procedure btn_ExcluirClick(Sender: TObject);
    procedure btn_PesquisarClick(Sender: TObject);
    procedure btn_NovoClick(Sender: TObject);
    procedure dbg_ConsultaDblClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btn_NotasClick(Sender: TObject);
    procedure btn_MediaClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    Professor : TProfessor;
    Nota : TNota;
    procedure prc_Salvar;
    procedure prc_Alterar;
    procedure prc_Excluir;
    procedure prc_Pesquisar;
    procedure prc_Novo;
    procedure prc_Lancar_Notas;
    procedure prc_Calcular_Media;
  end;

var
  frm_Professor: Tfrm_Professor;

implementation

{$R *.dfm}

uses uNota, clsCalculo;

{ Tfrm_Professor }

procedure Tfrm_Professor.btn_NotasClick(Sender: TObject);
begin
  inherited;
  prc_Lancar_Notas;
end;

procedure Tfrm_Professor.btn_CancelarClick(Sender: TObject);
begin
  inherited;
  prc_Cancelar;
end;

procedure Tfrm_Professor.btn_ExcluirClick(Sender: TObject);
begin
  prc_Excluir;
  inherited;
end;

procedure Tfrm_Professor.btn_MediaClick(Sender: TObject);
begin
  inherited;
  prc_Calcular_Media;
end;

procedure Tfrm_Professor.btn_NovoClick(Sender: TObject);
begin
  inherited;
  prc_Novo;
  btn_Notas.Enabled := False;
  btn_Media.Enabled := False;
end;

procedure Tfrm_Professor.btn_PesquisarClick(Sender: TObject);
begin
  inherited;
  prc_Pesquisar;
end;

procedure Tfrm_Professor.btn_SalvarClick(Sender: TObject);
begin
  inherited;
  prc_Salvar;
end;

procedure Tfrm_Professor.dbg_ConsultaDblClick(Sender: TObject);
begin
  inherited;
  prc_Alterar;
end;

procedure Tfrm_Professor.FormCreate(Sender: TObject);
begin
  inherited;
  Professor := TProfessor.Create(dm_Escola.FDConnection);
  Nota      := TNota.Create(dm_Escola.FDConnection);
end;

procedure Tfrm_Professor.FormDestroy(Sender: TObject);
begin
  inherited;
  Professor.Destroy;
  Nota.Destroy;
end;

procedure Tfrm_Professor.FormShow(Sender: TObject);
begin
  inherited;
  prc_Pesquisar;
end;

procedure Tfrm_Professor.prc_Alterar;
begin
  if not (dbg_Consulta.DataSource.DataSet.IsEmpty) then begin
    Professor.Id_Professor := dbg_Consulta.DataSource.DataSet.FieldByName('Id').AsInteger;

    edt_Id.Text            := IntToStr(Professor.Id_Professor);
    edt_Nome.Text          := dbg_Consulta.DataSource.DataSet.FieldByName('Nome').AsString;
    edt_Cpf.Text           := dbg_Consulta.DataSource.DataSet.FieldByName('Cpf').AsString;
    cb_Sexo.ItemIndex      := cb_Sexo.Items.IndexOf(dbg_Consulta.DataSource.DataSet.FieldByName('Sexo').AsString);
    dtp_Dt_Nascimento.Date := dbg_Consulta.DataSource.DataSet.FieldByName('Data_Nascimento').AsDateTime;
    edt_Email.Text         := dbg_Consulta.DataSource.DataSet.FieldByName('Email').AsString;
    edt_Disciplina.Text    := dbg_Consulta.DataSource.DataSet.FieldByName('Disciplina').AsString;
    btn_Notas.Enabled      := True;
    btn_Media.Enabled      := True;
  end;
end;

procedure Tfrm_Professor.prc_Calcular_Media;
var
  fqMedia : TFDQuery;
  Media, Maior, Menor : TCalculo;
begin
  inherited;
  try
    fqMedia := Nota.fnc_Alunos(StrToInt(edt_Id.Text));
//    fqMedia            := TFDQuery.Create(nil);
//    fqMedia.Connection := dm_Escola.FDConnection;
//
//    fqMedia.Close;
//    fqMedia.sql.Clear;
//    fqMedia.sql.Add('select n.id_professor,                 ' +
//                    '       p.nome as professor,            ' +
//                    '       n.id_aluno,                     ' +
//                    '       a.nome as aluno,                ' +
//                    '       n.ano,                          ' +
//                    '       n.nota_1,                       ' +
//                    '       n.nota_2,                       ' +
//                    '       n.nota_3,                       ' +
//                    '       n.nota_4,                       ' +
//                    '       0 as media                      ' +
//                    ' from nota n                           ' +
//                    ' inner join professor p                ' +
//                    '    on p.id = n.id_professor           ' +
//                    ' inner join aluno a                    ' +
//                    '    on a.id = n.id_aluno               ' +
//                    'where n.id_professor = :p_id_professor '
//                    );
//    fqMedia.ParamByName('p_id_professor').AsInteger := StrToInt(edt_Id.Text);
    fqMedia.Open;
    fqMedia.Edit;
    fqMedia.First;

    Media := TCalculoMedia.Create();
    Maior := TCalculoMaior.Create();
    Menor := TCalculoMenor.Create();

    mm_Media.Clear;
    while not fqMedia.Eof do begin

      (Media as TCalculoMedia).Valor1 := fqMedia.FieldByName('nota_1').AsFloat;
      (Media as TCalculoMedia).Valor2 := fqMedia.FieldByName('nota_2').AsFloat;
      (Media as TCalculoMedia).Valor3 := fqMedia.FieldByName('nota_3').AsFloat;
      (Media as TCalculoMedia).Valor4 := fqMedia.FieldByName('nota_4').AsFloat;

      (Maior as TCalculoMaior).Valor1 := fqMedia.FieldByName('nota_1').AsFloat;
      (Maior as TCalculoMaior).Valor2 := fqMedia.FieldByName('nota_2').AsFloat;
      (Maior as TCalculoMaior).Valor3 := fqMedia.FieldByName('nota_3').AsFloat;
      (Maior as TCalculoMaior).Valor4 := fqMedia.FieldByName('nota_4').AsFloat;

      (Menor as TCalculoMenor).Valor1 := fqMedia.FieldByName('nota_1').AsFloat;
      (Menor as TCalculoMenor).Valor2 := fqMedia.FieldByName('nota_2').AsFloat;
      (Menor as TCalculoMenor).Valor3 := fqMedia.FieldByName('nota_3').AsFloat;
      (Menor as TCalculoMenor).Valor4 := fqMedia.FieldByName('nota_4').AsFloat;

      mm_Media.Lines.Add('Ano: ' + fqMedia.FieldByName('ano').AsString + ' - ' +
                         'Aluno: ' + fqMedia.FieldByName('aluno').AsString + ' - ' +
                         'Média: ' + FloatToStr((Media as TCalculoMedia).Calcular) + ' - ' +
                         'Maior Nota: ' + FloatToStr((Maior as TCalculoMaior).Calcular) + ' - ' +
                         'Menor Nota: ' + FloatToStr((Menor as TCalculoMenor).Calcular)
                        );


       fqMedia.Next;
     end;

  finally
    FreeAndNil(fqMedia);
    FreeAndNil(Media);
    FreeAndNil(Maior);
    FreeAndNil(Menor);
  end;

//  ds_Media.DataSet := Nota.fnc_Alunos(StrToInt(edt_Id.Text));

//  try
//    Calculo := TCalculoMedia.Create();
//    (Calculo as TCalculoMedia).Valor1 := StrToFloatDef(edt_Nota1.Text, 0);
//    (Calculo as TCalculoMedia).Valor2 := StrToFloatDef(edt_Nota2.Text, 0);
//    (Calculo as TCalculoMedia).Valor3 := StrToFloatDef(edt_Nota3.Text, 0);
//    (Calculo as TCalculoMedia).Valor4 := StrToFloatDef(edt_Nota4.Text, 0);
//    ShowMessage((Calculo as TCalculoMedia).Calcular);
//  finally
//    FreeAndNil(Calculo);
//  end;
//
//  try
//    Calculo := TCalculoMaior.Create();
//    (Calculo as TCalculoMaior).Valor1 := StrToFloatDef(edt_Nota1.Text, 0);
//    (Calculo as TCalculoMaior).Valor2 := StrToFloatDef(edt_Nota2.Text, 0);
//    (Calculo as TCalculoMaior).Valor3 := StrToFloatDef(edt_Nota3.Text, 0);
//    (Calculo as TCalculoMaior).Valor4 := StrToFloatDef(edt_Nota4.Text, 0);
//    ShowMessage((Calculo as TCalculoMaior).Calcular);
//  finally
//    FreeAndNil(Calculo);
//  end;
//
//  try
//    Calculo := TCalculoMenor.Create();
//    (Calculo as TCalculoMenor).Valor1 := StrToFloatDef(edt_Nota1.Text, 0);
//    (Calculo as TCalculoMenor).Valor2 := StrToFloatDef(edt_Nota2.Text, 0);
//    (Calculo as TCalculoMenor).Valor3 := StrToFloatDef(edt_Nota3.Text, 0);
//    (Calculo as TCalculoMenor).Valor4 := StrToFloatDef(edt_Nota4.Text, 0);
//    ShowMessage((Calculo as TCalculoMenor).Calcular);
//  finally
//    FreeAndNil(Calculo);
//  end;
end;

procedure Tfrm_Professor.prc_Excluir;
begin
  if Application.MessageBox('Deseja excluir o registro?', 'Confirmação', mb_YesNo + mb_IconInformation + mb_DefButton2) = mrYes then begin
    Professor.prc_Deletar(Professor.Id_Professor);
    Application.MessageBox('Professor excluído com sucesso!', 'Informação', MB_OK + MB_ICONINFORMATION);
    prc_Pesquisar;
    prc_Cancelar;
  end;
end;

procedure Tfrm_Professor.prc_Lancar_Notas;
begin
  frm_Nota := Tfrm_Nota.Create(Application);
  try
    frm_Nota.i_Id_Professor   := StrToInt(edt_Id.Text);
    frm_Nota.s_Nome_Professor := edt_Nome.Text;
    frm_Nota.ShowModal;
  finally
    frm_Nota.Free;
  end;
end;

procedure Tfrm_Professor.prc_Novo;
begin
  edt_Id.Clear;
  edt_Nome.Clear;
  edt_Cpf.Clear;
  cb_Sexo.ItemIndex      := 0;
  dtp_Dt_Nascimento.Date := Date;
  edt_Email.Clear;
  edt_Disciplina.Clear;
  edt_Nome.SetFocus;
end;

procedure Tfrm_Professor.prc_Pesquisar;
begin
  ds_Consulta.DataSet := Professor.fnc_Consultar(edt_Pesquisar.Text);
end;

procedure Tfrm_Professor.prc_Salvar;
var
  i_Operacao : Integer;
  s_Erro     : String;
begin
  inherited;
  try
    with Professor do begin
      Nome            := edt_Nome.Text;
      CPF             := edt_Cpf.Text;
      Sexo            := cb_Sexo.Text;
      Data_Nascimento := dtp_Dt_Nascimento.Date;
      E_mail          := edt_Email.Text;
      Disciplina      := edt_Disciplina.Text;
    end;

    case FOperacao of
      opNovo    : i_Operacao := 0;
      opAlterar : i_Operacao := 1;
    end;

    if Professor.fnc_Salvar(i_Operacao, s_Erro) then begin
       Application.MessageBox('Professor salvo com sucesso!', 'Informação', MB_OK + MB_ICONINFORMATION);
       prc_Cancelar;
       prc_Pesquisar;
    end else begin
       Application.MessageBox(pChar('Erro ao gravar: ' + s_Erro), 'Informação', MB_OK + MB_ICONERROR);
    end;
  finally
  end;
end;

end.
